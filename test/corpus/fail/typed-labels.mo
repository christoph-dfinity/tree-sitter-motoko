=========
typed-labels.mo
=========

// test some forms of typed labels, aka. outward/non-capturable (2nd class) continuations

let a0 = label c : Nat { loop { break c 42 }; 25 };
let b0 = label c : Nat { loop { break c 42 } while true; 25 };
let c0 = label c : Nat { while true { break c 42 }; 25 };
let d0 = label c : Nat { for (_ in "HEY!".chars()) { break c 42 }; 25 };
let e0 = label c : Nat { break c 42; 25 };

let a1 = label c : Nat loop { break c 42 };
let b1 = label c : Nat loop { break c 42 } while true;
let c1 = label c : Nat while true { break c 42 };
let d1 = label c : Nat for (_ in "HEY!".chars()) { break c 42 };
let e1 = label c : Nat break c 42;

let a2 = label c : Nat { loop { continue c }; 25 }; // c is not a continue label
let b2 = label c : Nat { loop { continue c } while true; 25 }; // ditto
let c2 = label c : Nat { while true { continue c }; 25 }; // ditto
let d2 = label c : Nat { for (_ in "HEY!".chars()) { continue c }; 25 }; // ditto
let e2 = label c : Nat { continue c }; // ditto

let a3 = label c : Nat loop { continue c };
let b3 = label c : Nat loop { continue c } while true;
let c3 = label c : Nat while true { continue c };
let d3 = label c : Nat for (_ in "HEY!".chars()) { continue c };
let e3 = label c : Nat continue c; // c is not a continue label

---

(source_file
  (line_comment)
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (loop_exp
            (block_exp
              (exp_dec
                (break_exp
                  (identifier)
                  (lit_exp
                    (int_literal)))))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (loop_exp
            (block_exp
              (exp_dec
                (break_exp
                  (identifier)
                  (lit_exp
                    (int_literal)))))
            (lit_exp
              (bool_literal))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (while_exp
            (lit_exp
              (bool_literal))
            (block_exp
              (exp_dec
                (break_exp
                  (identifier)
                  (lit_exp
                    (int_literal)))))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (for_exp
            (wild_pat)
            (call_exp_object
              (dot_exp_object
                (lit_exp
                  (text_literal))
                (identifier))
              (par_exp))
            (block_exp
              (exp_dec
                (break_exp
                  (identifier)
                  (lit_exp
                    (int_literal)))))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (break_exp
            (identifier)
            (lit_exp
              (int_literal))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (loop_exp
        (block_exp
          (exp_dec
            (break_exp
              (identifier)
              (lit_exp
                (int_literal))))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (loop_exp
        (block_exp
          (exp_dec
            (break_exp
              (identifier)
              (lit_exp
                (int_literal)))))
        (lit_exp
          (bool_literal)))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (while_exp
        (lit_exp
          (bool_literal))
        (block_exp
          (exp_dec
            (break_exp
              (identifier)
              (lit_exp
                (int_literal))))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (for_exp
        (wild_pat)
        (call_exp_object
          (dot_exp_object
            (lit_exp
              (text_literal))
            (identifier))
          (par_exp))
        (block_exp
          (exp_dec
            (break_exp
              (identifier)
              (lit_exp
                (int_literal))))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (break_exp
        (identifier)
        (lit_exp
          (int_literal)))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (loop_exp
            (block_exp
              (exp_dec
                (continue_exp
                  (identifier))))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (line_comment)
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (loop_exp
            (block_exp
              (exp_dec
                (continue_exp
                  (identifier))))
            (lit_exp
              (bool_literal))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (line_comment)
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (while_exp
            (lit_exp
              (bool_literal))
            (block_exp
              (exp_dec
                (continue_exp
                  (identifier))))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (line_comment)
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (for_exp
            (wild_pat)
            (call_exp_object
              (dot_exp_object
                (lit_exp
                  (text_literal))
                (identifier))
              (par_exp))
            (block_exp
              (exp_dec
                (continue_exp
                  (identifier))))))
        (exp_dec
          (lit_exp
            (int_literal))))))
  (line_comment)
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (block_exp
        (exp_dec
          (continue_exp
            (identifier))))))
  (line_comment)
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (loop_exp
        (block_exp
          (exp_dec
            (continue_exp
              (identifier)))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (loop_exp
        (block_exp
          (exp_dec
            (continue_exp
              (identifier))))
        (lit_exp
          (bool_literal)))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (while_exp
        (lit_exp
          (bool_literal))
        (block_exp
          (exp_dec
            (continue_exp
              (identifier)))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (for_exp
        (wild_pat)
        (call_exp_object
          (dot_exp_object
            (lit_exp
              (text_literal))
            (identifier))
          (par_exp))
        (block_exp
          (exp_dec
            (continue_exp
              (identifier)))))))
  (let_dec
    (var_pat
      (identifier))
    (label_exp
      (identifier)
      (typ_annot
        (path_typ
          (typ_path
            (type_identifier))))
      (continue_exp
        (identifier))))
  (line_comment))
