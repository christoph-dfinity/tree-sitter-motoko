=========
issue-3265-fail.mo
=========

// simplest example of failure (negative version)
let rec1 : { var x : Nat } = { var x = (0 : Int)}; // reject
let rec1a : { var x : Int } = { x = (0 : Nat)}; // reject
let rec1b : { x : Int } = { var x = (0 : Nat)}; // reject

// repro from #3265 (negative version)
type List<X> = ?(X, List<X>);
func nil<X>() : List<X> = null;
func sub(x : List<None>) : List<Nat>{x};
let rec2 : { var myList : List<None> } = { var myList = nil<Nat>() }; // reject
let rec2a : { myList : List<Nat> } = { var myList = nil<None>() }; // reject
let rec2b : { var myList : List<Nat> } = { myList = nil<None>() }; // reject

---

(source_file
  (line_comment)
  (let_dec
    (annot_pat
      (var_pat
        (identifier))
      (typ_annot
        (obj_typ
          (val_tf
            (identifier)
            (path_typ
              (typ_path
                (type_identifier)))))))
    (object_exp
      (exp_field
        (identifier)
        (par_exp
          (annot_exp_object
            (lit_exp
              (int_literal))
            (path_typ
              (typ_path
                (type_identifier))))))))
  (line_comment)
  (let_dec
    (annot_pat
      (var_pat
        (identifier))
      (typ_annot
        (obj_typ
          (val_tf
            (identifier)
            (path_typ
              (typ_path
                (type_identifier)))))))
    (object_exp
      (exp_field
        (identifier)
        (par_exp
          (annot_exp_object
            (lit_exp
              (int_literal))
            (path_typ
              (typ_path
                (type_identifier))))))))
  (line_comment)
  (let_dec
    (annot_pat
      (var_pat
        (identifier))
      (typ_annot
        (obj_typ
          (val_tf
            (identifier)
            (path_typ
              (typ_path
                (type_identifier)))))))
    (object_exp
      (exp_field
        (identifier)
        (par_exp
          (annot_exp_object
            (lit_exp
              (int_literal))
            (path_typ
              (typ_path
                (type_identifier))))))))
  (line_comment)
  (line_comment)
  (typ_dec
    (type_identifier)
    (typ_params
      (typ_bind
        (type_identifier)))
    (quest_typ
      (tup_typ
        (typ_item
          (path_typ
            (typ_path
              (type_identifier))))
        (typ_item
          (path_typ
            (typ_path
              (type_identifier))
            (path_typ
              (typ_path
                (type_identifier))))))))
  (func_dec
    (identifier)
    (typ_params
      (typ_bind
        (type_identifier)))
    (tup_pat)
    (typ_annot
      (path_typ
        (typ_path
          (type_identifier))
        (path_typ
          (typ_path
            (type_identifier)))))
    (func_body
      (lit_exp
        (null_literal))))
  (func_dec
    (identifier)
    (tup_pat
      (annot_pat
        (var_pat
          (identifier))
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier))
            (path_typ
              (typ_path
                (type_identifier)))))))
    (typ_annot
      (path_typ
        (typ_path
          (type_identifier))
        (path_typ
          (typ_path
            (type_identifier)))))
    (func_body
      (block_exp
        (exp_dec
          (var_exp
            (identifier))))))
  (let_dec
    (annot_pat
      (var_pat
        (identifier))
      (typ_annot
        (obj_typ
          (val_tf
            (identifier)
            (path_typ
              (typ_path
                (type_identifier))
              (path_typ
                (typ_path
                  (type_identifier))))))))
    (object_exp
      (exp_field
        (identifier)
        (call_exp_object
          (var_exp
            (identifier))
          (inst
            (path_typ
              (typ_path
                (type_identifier))))
          (par_exp)))))
  (line_comment)
  (let_dec
    (annot_pat
      (var_pat
        (identifier))
      (typ_annot
        (obj_typ
          (val_tf
            (identifier)
            (path_typ
              (typ_path
                (type_identifier))
              (path_typ
                (typ_path
                  (type_identifier))))))))
    (object_exp
      (exp_field
        (identifier)
        (call_exp_object
          (var_exp
            (identifier))
          (inst
            (path_typ
              (typ_path
                (type_identifier))))
          (par_exp)))))
  (line_comment)
  (let_dec
    (annot_pat
      (var_pat
        (identifier))
      (typ_annot
        (obj_typ
          (val_tf
            (identifier)
            (path_typ
              (typ_path
                (type_identifier))
              (path_typ
                (typ_path
                  (type_identifier))))))))
    (object_exp
      (exp_field
        (identifier)
        (call_exp_object
          (var_exp
            (identifier))
          (inst
            (path_typ
              (typ_path
                (type_identifier))))
          (par_exp)))))
  (line_comment))
