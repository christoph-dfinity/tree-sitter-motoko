=========
cycle-type.mo
=========

actor {
    func _bad(a : actor { foo : () -> async (); oneway : () -> () }) : async () {
        let defaults = { moot = 9 };
        await (defaults with cycles = 'C') a.foo();
        await (defaults with cycles = "Can't") async ();
        func nonSend() : Nat = 42;
        ignore (with) nonSend();
        (with cycles = 999) a.oneway(); // should not warn
        ({} with) a.oneway();
        await (with timeout = 'T') a.foo();
    }
}

---

(source_file
  (obj_dec
    (obj_sort)
    (obj_body
      (dec_field
        (func_dec
          (identifier)
          (tup_pat
            (annot_pat
              (var_pat
                (identifier))
              (typ_annot
                (obj_sort_typ
                  (obj_typ
                    (val_tf
                      (identifier)
                      (func_typ
                        (tup_typ)
                        (async_typ
                          (tup_typ))))
                    (val_tf
                      (identifier)
                      (func_typ
                        (tup_typ)
                        (tup_typ))))))))
          (typ_annot
            (async_typ
              (tup_typ)))
          (func_body
            (block_exp
              (let_dec
                (var_pat
                  (identifier))
                (object_exp
                  (exp_field
                    (identifier)
                    (lit_exp
                      (int_literal)))))
              (exp_dec
                (await_exp
                  (parenthetical_exp
                    (parenthetical
                      (var_exp
                        (identifier))
                      (exp_field
                        (identifier)
                        (lit_exp
                          (char_literal))))
                    (call_exp_block
                      (dot_exp_block
                        (var_exp
                          (identifier))
                        (identifier))
                      (par_exp)))))
              (exp_dec
                (await_exp
                  (async_exp
                    (parenthetical
                      (var_exp
                        (identifier))
                      (exp_field
                        (identifier)
                        (lit_exp
                          (text_literal))))
                    (par_exp))))
              (func_dec
                (identifier)
                (tup_pat)
                (typ_annot
                  (path_typ
                    (typ_path
                      (type_identifier))))
                (func_body
                  (lit_exp
                    (int_literal))))
              (exp_dec
                (ignore_exp
                  (parenthetical_exp
                    (parenthetical)
                    (call_exp_block
                      (var_exp
                        (identifier))
                      (par_exp)))))
              (exp_dec
                (parenthetical_exp
                  (parenthetical
                    (exp_field
                      (identifier)
                      (lit_exp
                        (int_literal))))
                  (call_exp_block
                    (dot_exp_block
                      (var_exp
                        (identifier))
                      (identifier))
                    (par_exp))))
              (line_comment)
              (exp_dec
                (parenthetical_exp
                  (parenthetical
                    (object_exp))
                  (call_exp_block
                    (dot_exp_block
                      (var_exp
                        (identifier))
                      (identifier))
                    (par_exp))))
              (exp_dec
                (await_exp
                  (parenthetical_exp
                    (parenthetical
                      (exp_field
                        (identifier)
                        (lit_exp
                          (char_literal))))
                    (call_exp_block
                      (dot_exp_block
                        (var_exp
                          (identifier))
                        (identifier))
                      (par_exp))))))))))))
