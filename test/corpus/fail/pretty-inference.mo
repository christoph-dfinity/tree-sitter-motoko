=========
pretty-inference.mo
=========

// test pretty printing of inference errors
func p<T,U>(x : T, y: U) : (T, U) { (x,y);};
let p1 = p(1,true);

let p2 = p(p1, p1);
let p3 = p(p2, p2);
let p4 = p(p3, p3);
let p5 = p(p4, p4);


func f<T <: ()>(x:T) {};

f(1);

f(p1);

f(p2);

f(p3);

f(p4);

f(p5);

type C<X> = (X,X);
func g<T <: C<C<C<C<Nat>>>>>(x:T) {};

g(1);

g(p1);

g(p2);

g(p3);

g(p4);

g(p5);

func h<T, U>(x : T,u : U) : Nat {0};

h(1,1);

h(p1,p1);

h(p2,p2);

h(p3,p3);

h(p4,p4);

h(p5,p5);

();

---

(source_file
  (line_comment)
  (func_dec
    (identifier)
    (typ_params
      (typ_bind
        (type_identifier))
      (typ_bind
        (type_identifier)))
    (tup_pat
      (annot_pat
        (var_pat
          (identifier))
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier)))))
      (annot_pat
        (var_pat
          (identifier))
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier))))))
    (typ_annot
      (tup_typ
        (typ_item
          (path_typ
            (typ_path
              (type_identifier))))
        (typ_item
          (path_typ
            (typ_path
              (type_identifier))))))
    (func_body
      (block_exp
        (exp_dec
          (par_exp
            (var_exp
              (identifier))
            (var_exp
              (identifier)))))))
  (let_dec
    (var_pat
      (identifier))
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (lit_exp
          (int_literal))
        (lit_exp
          (bool_literal)))))
  (let_dec
    (var_pat
      (identifier))
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (let_dec
    (var_pat
      (identifier))
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (let_dec
    (var_pat
      (identifier))
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (let_dec
    (var_pat
      (identifier))
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (func_dec
    (identifier)
    (typ_params
      (typ_bind
        (type_identifier)
        (tup_typ)))
    (tup_pat
      (annot_pat
        (var_pat
          (identifier))
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier))))))
    (func_body
      (block_exp)))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (lit_exp
          (int_literal)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (typ_dec
    (type_identifier)
    (typ_params
      (typ_bind
        (type_identifier)))
    (tup_typ
      (typ_item
        (path_typ
          (typ_path
            (type_identifier))))
      (typ_item
        (path_typ
          (typ_path
            (type_identifier))))))
  (func_dec
    (identifier)
    (typ_params
      (typ_bind
        (type_identifier)
        (path_typ
          (typ_path
            (type_identifier))
          (path_typ
            (typ_path
              (type_identifier))
            (path_typ
              (typ_path
                (type_identifier))
              (path_typ
                (typ_path
                  (type_identifier))
                (path_typ
                  (typ_path
                    (type_identifier)))))))))
    (tup_pat
      (annot_pat
        (var_pat
          (identifier))
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier))))))
    (func_body
      (block_exp)))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (lit_exp
          (int_literal)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier)))))
  (func_dec
    (identifier)
    (typ_params
      (typ_bind
        (type_identifier))
      (typ_bind
        (type_identifier)))
    (tup_pat
      (annot_pat
        (var_pat
          (identifier))
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier)))))
      (annot_pat
        (var_pat
          (identifier))
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier))))))
    (typ_annot
      (path_typ
        (typ_path
          (type_identifier))))
    (func_body
      (block_exp
        (exp_dec
          (lit_exp
            (int_literal))))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (lit_exp
          (int_literal))
        (lit_exp
          (int_literal)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (exp_dec
    (call_exp_object
      (var_exp
        (identifier))
      (par_exp
        (var_exp
          (identifier))
        (var_exp
          (identifier)))))
  (exp_dec
    (par_exp)))
