==================
Nullary
==================

type T = Nat;
type T = (Nat);
type T = (Nat, Text, Bool);
type T = Path.To.nat.Nat;
type T = Path.To<Nat>;
type T = Path.To<Nat, Int>;
type T = { };
type T = { x : Nat; y : {}};
type T = { # };
type T = { #x : Nat; #y };

---

(source_file
  (typ_dec
    (type_identifier)
    (path_typ
      (typ_path
        (type_identifier))))
  (typ_dec
    (type_identifier)
    (tup_typ
      (typ_item
        (path_typ
          (typ_path
            (type_identifier))))))
  (typ_dec
    (type_identifier)
    (tup_typ
      (typ_item
        (path_typ
          (typ_path
            (type_identifier))))
      (typ_item
        (path_typ
          (typ_path
            (type_identifier))))
      (typ_item
        (path_typ
          (typ_path
            (type_identifier))))))
  (typ_dec
    (type_identifier)
    (path_typ
      (typ_path
        (identifier)
        (identifier)
        (identifier)
        (type_identifier))))
  (typ_dec
    (type_identifier)
    (path_typ
      (typ_path
        (identifier)
        (type_identifier))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (path_typ
      (typ_path
        (identifier)
        (type_identifier))
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (obj_typ))
  (typ_dec
    (type_identifier)
    (obj_typ
      (val_tf
        (identifier)
        (path_typ
          (typ_path
            (type_identifier))))
      (val_tf
        (identifier)
        (obj_typ))))
  (typ_dec
    (type_identifier)
    (variant_typ))
  (typ_dec
    (type_identifier)
    (variant_typ
      (typ_tag
        (identifier)
        (typ_annot
          (path_typ
            (typ_path
              (type_identifier)))))
      (typ_tag
        (identifier)))))

==================
Unary
==================

type T = ?Nat

---

(source_file
  (typ_dec
    (type_identifier)
    (quest_typ
      (path_typ
        (typ_path
          (type_identifier))))))

==================
Pre
==================

type T = prim "Nat";
type T = async Nat;
type T = async* Nat;

---

(source_file
  (typ_dec
    (type_identifier)
    (prim_typ
      (text_literal)))
  (typ_dec
    (type_identifier)
    (async_typ
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (async_typ
      (path_typ
        (typ_path
          (type_identifier))))))

==================
Func
==================

type T = N -> A;
type T = shared N -> A;
type T = shared query N -> A;
type T = shared composite query N -> A;
type T = query N -> A;
type T = composite query N -> A;
type T = <T, A <: B> N -> A;
type T = <T, A <: B> ?N -> A;

---

(source_file
  (typ_dec
    (type_identifier)
    (func_typ
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (func_typ
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (func_typ
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (func_typ
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (func_typ
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (func_typ
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (func_typ
      (typ_params
        (typ_bind
          (type_identifier))
        (typ_bind
          (type_identifier)
          (path_typ
            (typ_path
              (type_identifier)))))
      (path_typ
        (typ_path
          (type_identifier)))
      (path_typ
        (typ_path
          (type_identifier)))))
  (typ_dec
    (type_identifier)
    (func_typ
      (typ_params
        (typ_bind
          (type_identifier))
        (typ_bind
          (type_identifier)
          (path_typ
            (typ_path
              (type_identifier)))))
      (quest_typ
        (path_typ
          (typ_path
            (type_identifier))))
      (path_typ
        (typ_path
          (type_identifier))))))
